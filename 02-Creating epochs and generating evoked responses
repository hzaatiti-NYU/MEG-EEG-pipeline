import pathlib
import matplotlib

import mne
import mne_bids

matplotlib.use('Qt5Agg')
# Load the two raw data files
raw1 = mne.io.read_raw_fif('GS_01_analysis_01-raw.fif', preload=True)
raw2 = mne.io.read_raw_fif('GS_02_analysis_01-raw.fif', preload=True)
raw= mne.io.concatenate_raws([raw1, raw2])
raw.filter(l_freq=0.1, h_freq=40)
events, event_id = mne.events_from_annotations(raw)


tmin = -0.3
tmax = 0.5
baseline = (None, 0)

epochs = mne.Epochs(raw,
                    events=events,
                    event_id=event_id,
                    tmin=tmin,
                    tmax=tmax,
                    baseline=baseline,
                    preload=True)



epochs.plot()


# Selecting epochs based on experimental conditions

epochs['eyes_closed/eyes_open']
epochs['eyes_closed']
epochs['eyes_open']
epochs['eyes_closed'].plot_image()

# Saving epochs
epochs.save(pathlib.Path('out_data') / 'epochs_epo.fif', 
            overwrite=True)

# Creating evoked data
evoked_eyes_closed = epochs['eyes_closed'].average()
evoked_eyes_open = epochs['eyes_open'].average()
evoked_eyes_closed.plot(spatial_colors=True)
evoked_eyes_closed.plot_topomap(ch_type='mag')
evoked_eyes_closed.plot_joint(picks='mag')
mne.viz.plot_compare_evokeds([evoked_eyes_closed, evoked_eyes_open], picks='mag')

# Saving evoked data
mne.write_evokeds(fname=pathlib.Path('out_data') / 'evokeds_ave.fif',
                  evoked=[evoked_eyes_closed, evoked_eyes_open])
